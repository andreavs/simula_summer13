# 

# gotran file generated by cellml2gotran from severi_fantini_charawi_difrancesco_2012.cellml

states("I cal fca gate",
       fCa = 0.697998543259722)

states("Ca sr release",
       R_Ca = 0.912317231017262,
       O = 1.7340201253e-7,
       I = 7.86181717518e-8,
       RI = 0.211148145512825)

states("Ca buffering",
       fTC = 0.0180519400676086,
       fTMC = 0.281244308217086,
       fTMM = 0.501049376634,
       fCMi = 0.0373817991524254,
       fCMs = 0.054381370046,
       fCQ = 0.299624275428735)

states("I f y gate",
       y = 0.181334538702451)

states("I na m gate",
       m = 0.440131579215766)

states("I na h gate",
       h = 1.3676940140066e-5)

states("I cal dl gate",
       dL = 0)

states("I cal fl gate",
       fL = 0.497133507285601)

states("I cat dt gate",
       dT = 0)

states("I cat ft gate",
       fT = 0)

states("Ca dynamics",
       Cai = 1e-5,
       fBAPTA = 0,
       Ca_sub = 1e-5,
       fBAPTA_sub = 0,
       Ca_nsr = 1.05386465080816,
       Ca_jsr = 0.316762674605)

states("I to q gate",
       q = 0.506139850982478)

states("I to r gate",
       r = 0.0144605370597924)

states("I kr pa gate",
       paS = 0.322999177802891,
       paF = 0.0990510403258968)

states("I kr pi gate",
       piy = 0.705410877258545)

states("I ks n gate",
       n = 0)

states("I kach a gate",
       a = 0)

states("Membrane",
       V = [-52])

states("Nai concentration",
       Nai_ = 7.5)

parameters("Voltage clamp",
           t_holding = 0.5,
           t_test = 0.5,
           V_test = -35,
           V_holding = -45)

parameters("Rate modulation experiments",
           Iva_3_uM = 0,
           Cs_5_mM = 0,
           ACh = 1e-10,
           Iso_1_uM = 0,
           BAPTA_10_mM = 0)

parameters("I cal fca gate",
           alpha_fCa = 0.01,
           Km_fCa = 0.00035)

parameters("Ca sr release",
           ks = 250000000,
           MaxSR = 15,
           MinSR = 1,
           EC50_SR = 0.45,
           HSR = 2.5,
           koCa = 10000,
           kiCa = 500,
           kim = 5,
           kom = 60)

parameters("Ca intracellular fluxes",
           tau_dif_Ca = 4e-5,
           tau_tr = 0.04,
           P_up_basal = 12,
           K_up = 0.0006)

parameters("Ca buffering",
           TC_tot = 0.031,
           TMC_tot = 0.062,
           CM_tot = 0.045,
           CQ_tot = 10,
           kf_TC = 88800,
           kf_TMM = 2277,
           kf_TMC = 227700,
           kf_CM = 227700,
           kf_CQ = 534,
           kb_TC = 446,
           kb_TMC = 7.51,
           kb_TMM = 751,
           kb_CM = 542,
           kb_CQ = 445,
           Mgi = 2.5)

parameters("Cell parameters",
           V_jsr_part = 0.0012,
           V_i_part = 0.46,
           V_nsr_part = 0.0116,
           R_cell = 4,
           L_cell = 70,
           L_sub = 0.02)

parameters("Ionic values",
           Nao = 140,
           Ki = 140,
           Ko = 5.4,
           Cao = 1.8)

parameters("I f",
           Km_f = 45)

parameters("I nak",
           Km_Kp = 1.4,
           Km_Nap = 14,
           i_NaK_max = 0.063)

parameters("I naca",
           K_NaCa = 4,
           Qci = 0.1369,
           Qn = 0.4315,
           Qco = 0,
           K3ni = 26.44,
           Kci = 0.0207,
           K1ni = 395.3,
           K2ni = 2.289,
           Kcni = 26.44,
           K3no = 4.663,
           K1no = 1628,
           K2no = 561.4,
           Kco = 3.663)

parameters("I na",          g_Na = 0.33) #scaled to achieve 60V/s at peri.

parameters("I na m gate",
           delta_m = 1e-5)

parameters("I cal",
           P_CaL = 0.2)



parameters("I cat",
           P_CaT = 0.02)

parameters("Ca dynamics",
           kfBAPTA = 940000,
           kbBAPTA = 119.38,
           T_Ca = 6.928)

parameters("I to",
           g_to = 0.002)


parameters("I kr",
           g_Kr = 0.0021637)

parameters("I ks n gate",
           shift = 0)

parameters("I kach",
           g_KACh = 0.00864)

parameters(distance = [0.0])

#########################
parameters("I cal", CaL_ratio = 3.45)
parameters("I to", to_ratio = 2.33)
#parameters("I sus", sus_ratio = 54.55) # no I_sus in this model
parameters("I kr and I ks", K_ratio = 6.17)
parameters("I f",   f_ratio = 3.93)
##########################################
scale_I_Na = distance
scale_I_CaL = CaL_ratio**distance
scale_I_to = to_ratio**distance
scale_I_K = K_ratio**distance
scale_I_f = f_ratio**distance
##########################################


parameters("Membrane",
           R = 8314.472,
           T = 310,
           F = 96485.3415,
           Cm = 3.2e-5,
           clamp_mode = 0)


component("I cal fca gate")
fCa_infinity = Km_fCa/(Km_fCa + Ca_sub)
tau_fCa = 0.001*fCa_infinity/alpha_fCa

component("Ca sr release")
j_SRCarel = ks*O*(Ca_jsr - Ca_sub)
kCaSR = MaxSR - (MaxSR - MinSR)/(one + (EC50_SR/Ca_jsr)**HSR)
koSRCa = koCa/kCaSR
kiSRCa = kiCa*kCaSR

component("Ca intracellular fluxes")
b_up = Conditional(Gt(Iso_1_uM, 0), -0.25, Conditional(Gt(ACh, 0), 0.7*ACh/(0.00009 + ACh), 0))
P_up = P_up_basal*(one - b_up)
j_Ca_dif = (Ca_sub - Cai)/tau_dif_Ca
j_up = P_up/(one + K_up/Cai)
j_tr = (Ca_nsr - Ca_jsr)/tau_tr

component("Ca buffering")
delta_fTC = kf_TC*Cai*(one - fTC) - kb_TC*fTC
delta_fTMC = kf_TMC*Cai*(one - (fTMC + fTMM)) - kb_TMC*fTMC
delta_fTMM = kf_TMM*Mgi*(one - (fTMC + fTMM)) - kb_TMM*fTMM
delta_fCMi = kf_CM*Cai*(one - fCMi) - kb_CM*fCMi
delta_fCMs = kf_CM*Ca_sub*(one - fCMs) - kb_CM*fCMs
delta_fCQ = kf_CQ*Ca_jsr*(one - fCQ) - kb_CQ*fCQ

component("Cell parameters")
V_cell = 0.000000001*pi*R_cell**two*L_cell
V_sub = 0.000000001*two*pi*L_sub*(R_cell - L_sub/two)*L_cell
V_jsr = V_jsr_part*V_cell
V_i = V_i_part*V_cell - V_sub
V_nsr = V_nsr_part*V_cell

component("Extracted equations")
RTONF = R*T/F
Nai = Conditional(Gt(BAPTA_10_mM, 0), 7.5, Nai_)

component("Ionic values")
E_Na = RTONF*log(Nao/Nai)
E_K = RTONF*log(Ko/Ki)
E_Ca = 0.5*RTONF*log(Cao/Ca_sub)

component("I f")
g_f_Na = Conditional(Ge(Iva_3_uM, one), 0.03*(one - 0.66), 0.03)
g_f_K = Conditional(Ge(Iva_3_uM, one), 0.03*(one - 0.66), 0.03)
ICs_on_Icontrol = Conditional(Ge(Cs_5_mM, one), 10.6015/five/(10.6015/five + exp(-0.71*V/25)), one)
i_fNa = y**two*Ko/(Ko + Km_f)*g_f_Na*(V - E_Na)*ICs_on_Icontrol
i_fK = y**two*Ko/(Ko + Km_f)*g_f_K*(V - E_K)*ICs_on_Icontrol
i_f = scale_I_f*(i_fNa + i_fK)

component("I f y gate")
ACh_shift = Conditional(Gt(ACh, 0), -one - 9.898*(one*ACh)**0.618/((one*ACh)**0.618 + 0.00122423), 0)
Iso_shift = Conditional(Gt(Iso_1_uM, 0), 7.5, 0)
tau_y = 0.7166529/(0.0708*exp(-(V + five - ACh_shift - Iso_shift)/20.2791) + 10.6*exp((V - ACh_shift - Iso_shift)/18))
y_infinity = one/(one + exp((V + 52.5 - ACh_shift - Iso_shift)/9))

component("I nak")
Iso_increase = Conditional(Gt(Iso_1_uM, 0), 1.2, one)
i_NaK = Iso_increase*i_NaK_max*(one + (Km_Kp/Ko)**1.2)**-one*(one + (Km_Nap/Nai)**1.3)**-one*(one + exp(-(V - E_Na + 110)/20))**-one

component("I naca")
k43 = Nai/(K3ni + Nai)
k41 = exp(-Qn*V/(two*RTONF))
di = one + Ca_sub/Kci*(one + exp(-Qci*V/RTONF) + Nai/Kcni) + Nai/K1ni*(one + Nai/K2ni*(one + Nai/K3ni))
k34 = Nao/(K3no + Nao)
k32 = exp(Qn*V/(two*RTONF))
do_ = one + Cao/Kco*(one + exp(Qco*V/RTONF)) + Nao/K1no*(one + Nao/K2no*(one + Nao/K3no))
k12 = Ca_sub/Kci*exp(-Qci*V/RTONF)/di
k14 = Nai/K1ni*Nai/K2ni*(one + Nai/K3ni)*exp(Qn*V/(two*RTONF))/di
k21 = Cao/Kco*exp(Qco*V/RTONF)/do_
k23 = Nao/K1no*Nao/K2no*(one + Nao/K3no)*exp(-Qn*V/(two*RTONF))/do_
x1 = k41*k34*(k23 + k21) + k21*k32*(k43 + k41)
x2 = k32*k43*(k14 + k12) + k41*k12*(k34 + k32)
x3 = k14*k43*(k23 + k21) + k12*k23*(k43 + k41)
x4 = k23*k34*(k14 + k12) + k14*k21*(k34 + k32)
i_NaCa = K_NaCa*(x2*k21 - x1*k12)/(x1 + x2 + x3 + x4)

component("I na")
E_mh = RTONF*log((Nao + 0.12*Ko)/(Nai + 0.12*Ki))
i_Na = scale_I_Na*g_Na*m**three*h*(V - E_mh)

component("I na m gate")
E0_m = V + 41
alpha_m = Conditional(Lt(abs(E0_m), delta_m), 2000, 200*E0_m/(one - exp(-0.1*E0_m)))
beta_m = 8000*exp(-0.056*(V + 66))

component("I na h gate")
alpha_h = 20*exp(-0.125*(V + 75))
beta_h = 2000/(320*exp(-0.1*(V + 75)) + one)

component("I cal")
Iso_increase = Conditional(Gt(Iso_1_uM, 0), 1.23, one)
i_siCa = two*P_CaL*(V - 0)/(RTONF*(one - exp(-one*(V - 0)*two/RTONF)))*(Ca_sub - Cao*exp(-two*(V - 0)/RTONF))*dL*fL*fCa
i_siK = 0.000365*P_CaL*(V - 0)/(RTONF*(one - exp(-one*(V - 0)/RTONF)))*(Ki - Ko*exp(-one*(V - 0)/RTONF))*dL*fL*fCa
i_siNa = 0.0000185*P_CaL*(V - 0)/(RTONF*(one - exp(-one*(V - 0)/RTONF)))*(Nai - Nao*exp(-one*(V - 0)/RTONF))*dL*fL*fCa
ACh_block = 0.31*ACh/(ACh + 0.00009)
i_CaL = scale_I_CaL*(i_siCa + i_siK + i_siNa)*(one - ACh_block)*one*Iso_increase

component("I cal dl gate")
Iso_shift = Conditional(Gt(Iso_1_uM, 0), -8, 0)
Iso_slope = Conditional(Gt(Iso_1_uM, 0), 0.69, one)
dL_infinity = one/(one + exp(-(V + 20.3 - Iso_shift)/(Iso_slope*4.2)))
adVm = Conditional(Eq(V, -41.8), -41.80001, Conditional(Eq(V, 0), 0, Conditional(Eq(V, -6.8), -6.80001, V)))
bdVm = Conditional(Eq(V, -1.8), -1.80001, V)
alpha_dL = -0.02839*(adVm + 41.8 - Iso_shift)/(exp(-(adVm + 41.8 - Iso_shift)/2.5) - one) - 0.0849*(adVm + 6.8 - Iso_shift)/(exp(-(adVm + 6.8 - Iso_shift)/4.8) - one)
beta_dL = 0.01143*(bdVm + 1.8 - Iso_shift)/(exp((bdVm + 1.8 - Iso_shift)/2.5) - one)
tau_dL = 0.001/(alpha_dL + beta_dL)

component("I cal fl gate")
fL_infinity = one/(one + exp((V + 37.4)/5.3))
tau_fL = 0.001*(44.3 + 230*exp(-((V + 36)/ten)**two))

component("I cat")
i_CaT = two*P_CaT*V/(RTONF*(one - exp(-one*V*two/RTONF)))*(Ca_sub - Cao*exp(-two*V/RTONF))*dT*fT

component("I cat dt gate")
dT_infinity = one/(one + exp(-(V + 38.3)/5.5))
tau_dT = 0.001/(1.068*exp((V + 38.3)/30) + 1.068*exp(-(V + 38.3)/30))

component("I cat ft gate")
fT_infinity = one/(one + exp((V + 58.7)/3.8))
tau_fT = one/(16.67*exp(-(V + 75)/83.3) + 16.67*exp((V + 75)/15.38))

component("Ca dynamics")
BAPTA = 0

component("I to")
i_to = scale_I_to*g_to*(V - E_K)*q*r

component("I to q gate")
q_infinity = one/(one + exp((V + 49)/13))
tau_q = 0.001*0.6*(65.17/(0.57*exp(-0.08*(V + 44)) + 0.065*exp(0.1*(V + 45.93))) + 10.1)

component("I to r gate")
r_infinity = one/(one + exp(-(V - 19.3)/15))
tau_r = 0.001*0.66*1.4*(15.59/(1.037*exp(0.09*(V + 30.61)) + 0.369*exp(-0.12*(V + 23.84))) + 2.98)

component("I kr")
i_Kr = scale_I_K*g_Kr*(V - E_K)*(0.9*paF + 0.1*paS)*piy

component("I kr pa gate")
alfapaF = one/(one + exp(-(V + 23.2)/6.6))/0.84655354/(37.2*exp(V/11.9) + 0.96*exp(-V/18.5))
betapaF = four*((37.2*exp(V/15.9) + 0.96*exp(-V/22.5))/0.84655354 - one/(one + exp(-(V + 23.2)/10.6))/0.84655354/(37.2*exp(V/15.9) + 0.96*exp(-V/22.5)))
pa_infinity = one/(one + exp(-(V + 14.8)/8.5))
tau_paS = 0.84655354/(4.2*exp(V/17) + 0.15*exp(-V/21.6))
tau_paF = one/(30*exp(V/ten) + exp(-V/12))

component("I kr pi gate")
tau_pi = one/(100*exp(-V/54.645) + 656*exp(V/106.157))
pi_infinity = one/(one + exp((V + 28.6)/17.1))

component("I ks")
g_Ks = Conditional(Gt(Iso_1_uM, 0), 1.2*0.0016576, 0.0016576)
E_Ks = RTONF*log((Ko + 0*Nao)/(Ki + 0*Nai))
i_Ks = scale_I_K*g_Ks*(V - E_Ks)*n**two

component("I ks n gate")
Iso_shift = Conditional(Gt(Iso_1_uM, 0), -14, 0)
n_infinity = 14/(one + exp(-(V - 40 - Iso_shift)/12))/(14/(one + exp(-(V - 40 - Iso_shift)/12)) + one*exp(-(V - Iso_shift)/45))
alpha_n = 28/(one + exp(-(V - 40 - Iso_shift)/three))
beta_n = one*exp(-(V - Iso_shift - shift - five)/25)
tau_n = one/(alpha_n + beta_n)

component("I kach")
i_KACh = Conditional(Gt(ACh, 0), g_KACh*(V - E_K)*(one + exp((V + 20)/20))*a, 0)

component("I kach a gate")
alpha_a = (3.5988 - 0.025641)/(one + 0.0000012155/(one*ACh)**1.6951) + 0.025641
beta_a = ten*exp(0.0133*(V + 40))
a_infinity = alpha_a/(alpha_a + beta_a)
tau_a = one/(alpha_a + beta_a)

component("Membrane")
i_tot = i_f + i_Kr + i_Ks + i_to + i_NaK + i_NaCa + i_Na + i_CaL + i_CaT + i_KACh

component("Nai concentration")

comment("The ODE system: 33 states")
dfCa_dt = 1.0e-3*((fCa_infinity - fCa)/tau_fCa)
dR_Ca_dt = 1.0e-3*(kim*RI - kiSRCa*Ca_sub*R_Ca - (koSRCa*Ca_sub**two*R_Ca - kom*O))
dO_dt = 1.0e-3*(koSRCa*Ca_sub**two*R_Ca - kom*O - (kiSRCa*Ca_sub*O - kim*I))
dI_dt = 1.0e-3*(kiSRCa*Ca_sub*O - kim*I - (kom*I - koSRCa*Ca_sub**two*RI))
dRI_dt = 1.0e-3*(kom*I - koSRCa*Ca_sub**two*RI - (kim*RI - kiSRCa*Ca_sub*R_Ca))
dfTC_dt = 1.0e-3*(delta_fTC)
dfTMC_dt = 1.0e-3*(delta_fTMC)
dfTMM_dt = 1.0e-3*(delta_fTMM)
dfCMi_dt = 1.0e-3*(delta_fCMi)
dfCMs_dt = 1.0e-3*(delta_fCMs)
dfCQ_dt = 1.0e-3*(delta_fCQ)
dy_dt = 1.0e-3*((y_infinity - y)/tau_y)
dm_dt = 1.0e-3*(alpha_m*(one - m) - beta_m*m)
dh_dt = 1.0e-3*(alpha_h*(one - h) - beta_h*h)
ddL_dt = 1.0e-3*((dL_infinity - dL)/tau_dL)
dfL_dt = 1.0e-3*((fL_infinity - fL)/tau_fL)
ddT_dt = 1.0e-3*((dT_infinity - dT)/tau_dT)
dfT_dt = 1.0e-3*((fT_infinity - fT)/tau_fT)
dCai_dt = 1.0e-3*(one*(j_Ca_dif*V_sub - j_up*V_nsr)/V_i - (CM_tot*delta_fCMi + TC_tot*delta_fTC + TMC_tot*delta_fTMC) - (kfBAPTA*Cai*(BAPTA - fBAPTA) - kbBAPTA*fBAPTA))
dfBAPTA_dt = 1.0e-3*(BAPTA)
dCa_sub_dt = 1.0e-3*(j_SRCarel*V_jsr/V_sub - ((i_siCa + i_CaT - two*i_NaCa)/(two*F*V_sub) + j_Ca_dif + CM_tot*delta_fCMs) - (kfBAPTA*Ca_sub*(BAPTA - fBAPTA_sub) - kbBAPTA*fBAPTA_sub))
dfBAPTA_sub_dt =1.0e-3*( BAPTA)
dCa_nsr_dt = 1.0e-3*(j_up - j_tr*V_jsr/V_nsr)
dCa_jsr_dt = 1.0e-3*(j_tr - (j_SRCarel + CQ_tot*delta_fCQ))
dq_dt = 1.0e-3*((q_infinity - q)/tau_q)
dr_dt = 1.0e-3*((r_infinity - r)/tau_r)
dpaS_dt = 1.0e-3*((pa_infinity - paS)/tau_paS)
dpaF_dt = 1.0e-3*((pa_infinity - paF)/tau_paF)
dpiy_dt = 1.0e-3*((pi_infinity - piy)/tau_pi)
dn_dt = 1.0e-3*((n_infinity - n)/tau_n)
da_dt = 1.0e-3*((a_infinity - a)/tau_a)
dV_dt = 1.0e-3*(-i_tot/Cm)
dNai__dt = 1.0e-3*(-one*(i_Na + i_fNa + i_siNa + three*i_NaK + three*i_NaCa)/(one*(V_i + V_sub)*F))

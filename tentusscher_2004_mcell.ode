# A Model For Human Ventricular Tissue - M-cell variant
# 
# ABSTRACT: The experimental and clinical possibilities for studying cardiac
# arrhythmias in human ventricular myocardium are very limited. Therefore, the
# use of alternative methods such as computer simulations is of great importance.
# In this article we introduce a mathematical model of the action potential of
# human ventricular cells that, while including a high level of
# electrophysiological detail, is computationally cost-effective enough to be
# applied in large-scale spatial simulations for the study of reentrant
# arrhythmias. The model is based on recent experimental data on most of the
# major ionic currents: the fast sodium, L-type calcium, transient outward, rapid
# and slow delayed rectifier, and inward rectifier currents. The model includes a
# basic calcium dynamics, allowing for the realistic modeling of calcium
# transients, calcium current inactivation, and the contraction staircase. We are
# able to reproduce human epicardial, endocardial, and M cell action potentials
# and show that differences can be explained by differences in the transient
# outward and slow delayed rectifier currents. Our model reproduces the
# experimentally observed data on action potential duration restitution, which is
# an important characteristic for reentrant arrhythmias. The conduction velocity
# restitution of our model is broader than in other models and agrees better with
# available data. Finally, we model the dynamics of spiral wave rotation in a
# two-dimensional sheet of human ventricular tissue and show that the spiral wave
# follows a complex meandering pattern and has a period of 265 ms. We conclude
# that the proposed model reproduces a variety of electrophysiological behaviors
# and provides a basis for studies of reentrant arrhythmias in human ventricular
# tissue.
# 
# The original paper reference is cited below:
# 
# A model for human ventricular tissue, K.H.W.J. ten Tusscher, D. Noble, P.J.
# Noble, and A.V. Panfilov, 2004,American Journal of Physiology, 286,
# H1573-H1589.PubMed ID: 14656705
# 

# gotran file generated by cellml2gotran from tentusscher_noble_noble_panfilov_2004_a.cellml

states("Rapid time dependent potassium current xr1 gate",
       Xr1 = 0)

states("Rapid time dependent potassium current xr2 gate",
       Xr2 = 1)

states("Slow time dependent potassium current xs gate",
       Xs = 0)

states("Fast sodium current m gate",
       m = 0)

states("Fast sodium current h gate",
       h = 0.75)

states("Fast sodium current j gate",
       j = 0.75)

states("L type ca current d gate",
       d = 0)

states("L type ca current f gate",
       f = 1)

states("L type ca current fca gate",
       fCa = 1)

states("Transient outward current s gate",
       s = 1)

states("Transient outward current r gate",
       r = 0)

states("Calcium dynamics",
       g = 1,
       Ca_i = 0.0002,
       Ca_SR = 0.2)

states("Sodium dynamics",
       Na_i = 11.6)

states("Membrane",
       V = [-86.2])

states("Potassium dynamics",
       K_i = 138.3)

parameters("Reversal potentials",
           P_kna = 0.03)

parameters("Inward rectifier potassium current",
           g_K1 = 5.405)

parameters("Rapid time dependent potassium current",
           g_Kr = 0.096)

parameters("Slow time dependent potassium current",
           g_Ks = 0.062)

parameters("Fast sodium current",
           g_Na = 14.838)

parameters("Sodium background current",
           g_bna = 0.00029)

parameters("L type ca current",
           g_CaL = 0.000175)

parameters("Calcium background current",
           g_bca = 0.000592)

parameters("Transient outward current",
           g_to = 0.294)

parameters("Sodium potassium pump current",
           P_NaK = 1.362,
           K_mk = 1,
           K_mNa = 40)

parameters("Sodium calcium exchanger current",
           K_NaCa = 1000,
           K_sat = 0.1,
           alpha = 2.5,
           gamma = 0.35,
           Km_Ca = 1.38,
           Km_Nai = 87.5)

parameters("Calcium pump current",
           g_pCa = 0.825,
           K_pCa = 0.0005)

parameters("Potassium pump current",
           g_pK = 0.0146)

parameters("Calcium dynamics",
           Ca_o = 2,
           tau_g = 2,
           a_rel = 0.016464,
           b_rel = 0.25,
           c_rel = 0.008232,
           K_up = 0.00025,
           V_leak = 8e-5,
           Vmax_up = 0.000425,
           Buf_c = 0.15,
           K_buf_c = 0.001,
           Buf_sr = 10,
           K_buf_sr = 0.3,
           V_sr = 0.001094)

parameters("Sodium dynamics",
           Na_o = 140)

parameters("Membrane",
           R = 8314.472,
           T = 310,
           F = 96485.3415,
           Cm = 0.185,
           V_c = 0.016404,
           stim_start = 1,
           stim_duration = 1,
           stim_amplitude = 0, # 52,
           stim_period = 1000)

parameters("Potassium dynamics",
           K_o = 5.4)

component("Reversal potentials")
E_Na = (R*T)/F*log(Na_o/Na_i)
E_K = (R*T)/F*log(K_o/K_i)
E_Ks = (R*T)/F*log((K_o + P_kna*Na_o)/(K_i + P_kna*Na_i))
E_Ca = (0.5*R*T)/F*log(Ca_o/Ca_i)

component("Inward rectifier potassium current")
alpha_K1 = 0.1/(one + exp(0.06*((V - E_K) - 200)))
beta_K1 = (three*exp(0.0002*(V - E_K + 100)) + exp(0.1*((V - E_K) - ten)))/(one + exp(-0.5*(V - E_K)))
xK1_inf = alpha_K1/(alpha_K1 + beta_K1)
i_K1 = g_K1*xK1_inf*sqrt(K_o/5.4)*(V - E_K)

component("Rapid time dependent potassium current")
i_Kr = g_Kr*sqrt(K_o/5.4)*Xr1*Xr2*(V - E_K)

component("Rapid time dependent potassium current xr1 gate")
xr1_inf = one/(one + exp((-26 - V)/7.0))
alpha_xr1 = 450.0/(one + exp((-45 - V)/ten))
beta_xr1 = 6.0/(one + exp((V + 30)/11.5))
tau_xr1 = one*alpha_xr1*beta_xr1

component("Rapid time dependent potassium current xr2 gate")
xr2_inf = one/(one + exp((V + 88)/24.0))
alpha_xr2 = three/(one + exp((-60 - V)/20.0))
beta_xr2 = 1.12/(one + exp((V - 60)/20.0))
tau_xr2 = one*alpha_xr2*beta_xr2

component("Slow time dependent potassium current")
i_Ks = g_Ks*Xs**two*(V - E_Ks)

component("Slow time dependent potassium current xs gate")
xs_inf = one/(one + exp((-five - V)/14.0))
alpha_xs = 1100.0/sqrt(one + exp((-ten - V)/6.0))
beta_xs = one/(one + exp((V - 60)/20.0))
tau_xs = one*alpha_xs*beta_xs

component("Fast sodium current")
i_Na = g_Na*m**three*h*j*(V - E_Na)

component("Fast sodium current m gate")
m_inf = one/(one + exp((-56.86 - V)/9.03))**two
alpha_m = one/(one + exp((-60 - V)/five))
beta_m = 0.1/(one + exp((V + 35)/five)) + 0.1/(one + exp((V - 50)/200.0))
tau_m = one*alpha_m*beta_m

component("Fast sodium current h gate")
h_inf = one/(one + exp((V + 71.55)/7.43))**two
#alpha_h = Conditional(Lt(V, -40), 0.057*exp(-((V + 80))/6.8), 0)
#beta_h = Conditional(Lt(V, -40), 2.7*exp(0.079*V) + 310000*exp(0.3485*V), 0.77/(0.13*(one + exp((V + 10.66)/-11.1))))
alpha_h = ContinuousConditional(Lt(V, -40), 0.057*exp(-((V + 80))/6.8), 0)
beta_h = ContinuousConditional(Lt(V, -40), 2.7*exp(0.079*V) + 310000*exp(0.3485*V), 0.77/(0.13*(one + exp((V + 10.66)/-11.1))))
tau_h = one/(alpha_h + beta_h)

component("Fast sodium current j gate")
j_inf = one/(one + exp((V + 71.55)/7.43))**two
#alpha_j = Conditional(Lt(V, -40), ((-25428*exp(0.2444*V) - 6.948e-6*exp(-0.04391*V))*(V + 37.78))/one/(one + exp(0.311*(V + 79.23))), 0)
#beta_j = Conditional(Lt(V, -40), (0.02424*exp(-0.01052*V))/(one + exp(-0.1378*(V + 40.14))), (0.6*exp(0.057*V))/(one + exp(-0.1*(V + 32))))
alpha_j = ContinuousConditional(Lt(V, -40), ((-25428*exp(0.2444*V) - 6.948e-6*exp(-0.04391*V))*(V + 37.78))/one/(one + exp(0.311*(V + 79.23))), 0)
beta_j = ContinuousConditional(Lt(V, -40), (0.02424*exp(-0.01052*V))/(one + exp(-0.1378*(V + 40.14))), (0.6*exp(0.057*V))/(one + exp(-0.1*(V + 32))))
tau_j = one/(alpha_j + beta_j)

component("Sodium background current")
i_b_Na = g_bna*(V - E_Na)

component("L type ca current")
i_CaL = ((g_CaL*d*f*fCa*four*V*F**two)/(R*T)*(Ca_i*exp((two*V*F)/(R*T)) - 0.341*Ca_o))/(exp((two*V*F)/(R*T)) - one)

component("L type ca current d gate")
d_inf = one/(one + exp((-five - V)/7.5))
alpha_d = 1.4/(one + exp((-35 - V)/13.0)) + 0.25
beta_d = 1.4/(one + exp((V + five)/five))
gamma_d = one/(one + exp((50 - V)/20.0))
tau_d = one*alpha_d*beta_d + gamma_d

component("L type ca current f gate")
f_inf = one/(one + exp((V + 20)/7.0))
tau_f = 1125*exp(-((V + 27)**two)/240.0) + 80 + 165.0/(one + exp((25 - V)/ten))

component("L type ca current fca gate")
alpha_fCa = one/(one + (Ca_i/0.000325)**8)
beta_fCa = 0.1/(one + exp((Ca_i - 0.0005)/0.0001))
gama_fCa = 0.2/(one + exp((Ca_i - 0.00075)/0.0008))
fCa_inf = (alpha_fCa + beta_fCa + gama_fCa + 0.23)/1.46
tau_fCa = two
d_fCa = (fCa_inf - fCa)/tau_fCa

component("Calcium background current")
i_b_Ca = g_bca*(V - E_Ca)

component("Transient outward current")
i_to = g_to*r*s*(V - E_K)

component("Transient outward current s gate")
s_inf = one/(one + exp((V + 20)/five))
tau_s = 85*exp(-((V + 45)**two)/320.0) + five/(one + exp((V - 20)/five)) + three

component("Transient outward current r gate")
r_inf = one/(one + exp((20 - V)/6.0))
tau_r = 9.5*exp(-((V + 40)**two)/1800.0) + 0.8

component("Sodium potassium pump current")
i_NaK = ((P_NaK*K_o)/(K_o + K_mk)*Na_i)/(Na_i + K_mNa)/(one + 0.1245*exp((-0.1*V*F)/(R*T)) + 0.0353*exp((-V*F)/(R*T)))

component("Sodium calcium exchanger current")
i_NaCa = (K_NaCa*(exp((gamma*V*F)/(R*T))*Na_i**three*Ca_o - exp(((gamma - one)*V*F)/(R*T))*Na_o**three*Ca_i*alpha))/((Km_Nai**three + Na_o**three)*(Km_Ca + Ca_o)*(one + K_sat*exp(((gamma - one)*V*F)/(R*T))))

component("Calcium pump current")
i_p_Ca = (g_pCa*Ca_i)/(Ca_i + K_pCa)

component("Potassium pump current")
i_p_K = (g_pK*(V - E_K))/(one + exp((25 - V)/5.98))

component("Calcium dynamics")
i_rel = ((a_rel*Ca_SR**two)/(b_rel**two + Ca_SR**two) + c_rel)*d*g
i_up = Vmax_up/(one + K_up**two/Ca_i**two)
i_leak = V_leak*(Ca_SR - Ca_i)
#g_inf = Conditional(Lt(Ca_i, 0.00035), one/(one + (Ca_i/0.00035)**6), one/(one + (Ca_i/0.00035)**16))
g_inf = ContinuousConditional(Lt(Ca_i, 0.00035), one/(one + (Ca_i/0.00035)**6), one/(one + (Ca_i/0.00035)**16), 0.0001)
d_g = (g_inf - g)/tau_g
Ca_i_bufc = one/(one + (Buf_c*K_buf_c)/(Ca_i + K_buf_c)**two)
Ca_sr_bufsr = one/(one + (Buf_sr*K_buf_sr)/(Ca_SR + K_buf_sr)**two)

component("Sodium dynamics")

component("Membrane")
#i_Stim = Conditional(And(Ge(time, stim_start), Le(time, stim_start + stim_duration)), -stim_amplitude, 0)
i_Stim = -stim_amplitude*ContinuousConditional(Ge(time, stim_start), 1, 0, 0.2)*ContinuousConditional(Le(time, stim_start + stim_duration), 1, 0, 0.2)

component("Potassium dynamics")

comment("The ODE system: 17 states")
dXr1_dt = (xr1_inf - Xr1)/tau_xr1
dXr2_dt = (xr2_inf - Xr2)/tau_xr2
dXs_dt = (xs_inf - Xs)/tau_xs
dm_dt = (m_inf - m)/tau_m
dh_dt = (h_inf - h)/tau_h
dj_dt = (j_inf - j)/tau_j
dd_dt = (d_inf - d)/tau_d
df_dt = (f_inf - f)/tau_f
dfCa_dt = (1-ContinuousConditional(Le(fCa_inf, fCa), 1., 0., 0.1)*ContinuousConditional(Le(V, -60), 1, 0., 1))*d_fCa
#dfCa_dt = Conditional(And(Gt(fCa_inf, fCa), Gt(V, -60)), 0, d_fCa)
ds_dt = (s_inf - s)/tau_s
dr_dt = (r_inf - r)/tau_r
dg_dt = (1-ContinuousConditional(Le(g_inf, g), 1., 0, 0.1)*ContinuousConditional(Le(V, -60), 1, 0, 1))*d_g
#dg_dt = Conditional(And(Gt(g_inf, g), Gt(V, -60)), 0, d_g)
dCa_i_dt = Ca_i_bufc*((i_leak - i_up + i_rel) - (one*((i_CaL + i_b_Ca + i_p_Ca) - two*i_NaCa))/(two*one*V_c*F)*Cm)
dCa_SR_dt = (Ca_sr_bufsr*V_c)/V_sr*(i_up - (i_rel + i_leak))
dNa_i_dt = (-one*(i_Na + i_b_Na + three*i_NaK + three*i_NaCa)*Cm)/(one*V_c*F)
dV_dt = -one/one*(i_K1 + i_to + i_Kr + i_Ks + i_CaL + i_NaK + i_Na + i_b_Na + i_NaCa + i_b_Ca + i_p_K + i_p_Ca + i_Stim)
dK_i_dt = (-one*((i_K1 + i_to + i_Kr + i_Ks + i_p_K + i_Stim) - two*i_NaK)*Cm)/(one*V_c*F)
